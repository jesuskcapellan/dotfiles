#!/usr/bin/env bash

set -e  # Exit on error
set -u  # Exit on undefined variable

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Helper functions
log() {
    echo -e "${GREEN}[SSH SETUP]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

# Detect OS
OS="unknown"
if [[ "$OSTYPE" == "darwin"* ]]; then
    OS="macos"
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    OS="linux"
else
    error "Unsupported operating system: $OSTYPE"
fi

# Check arguments
if [ $# -ne 1 ]; then
    error "Usage: $0 <email>"
    exit 1
fi

EMAIL="$1"

# Validate email format
if ! echo "$EMAIL" | grep -E "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$" >/dev/null; then
    error "Invalid email format: $EMAIL"
fi

log "Generating a new SSH key for GitHub..."

# Create .ssh directory if it doesn't exist
if [ ! -d "$HOME/.ssh" ]; then
    log "Creating .ssh directory..."
    mkdir -p "$HOME/.ssh"
    chmod 700 "$HOME/.ssh"
fi

# Check if SSH key already exists
if [ -f "$HOME/.ssh/id_ed25519" ]; then
    warn "SSH key already exists at $HOME/.ssh/id_ed25519"
    read -p "Do you want to create a new key? This will overwrite the existing key. (y/N) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log "Keeping existing SSH key"
        exit 0
    fi
fi

# Generate SSH key
log "Generating ED25519 SSH key..."
ssh-keygen -t ed25519 -C "$EMAIL" -f "$HOME/.ssh/id_ed25519" || error "Failed to generate SSH key"

# Configure SSH agent
log "Configuring SSH agent..."
eval "$(ssh-agent -s)" || error "Failed to start SSH agent"

# Create or update SSH config
if [ "$OS" = "macos" ]; then
    CONFIG="Host github.com
    AddKeysToAgent yes
    UseKeychain yes
    IdentityFile ~/.ssh/id_ed25519"
else
    CONFIG="Host github.com
    AddKeysToAgent yes
    IdentityFile ~/.ssh/id_ed25519"
fi

echo "$CONFIG" > "$HOME/.ssh/config"
chmod 600 "$HOME/.ssh/config"

# Add key to SSH agent
if [ "$OS" = "macos" ]; then
    ssh-add --apple-use-keychain "$HOME/.ssh/id_ed25519" || error "Failed to add SSH key to agent"
else
    ssh-add "$HOME/.ssh/id_ed25519" || error "Failed to add SSH key to agent"
fi

# Display public key and instructions
log "SSH key generated successfully! ðŸŽ‰"
echo
echo -e "${YELLOW}Your public SSH key:${NC}"
echo "----------------"
cat "$HOME/.ssh/id_ed25519.pub"
echo "----------------"
echo
log "To add this key to your GitHub account:"
echo "1. Copy the public key above (including ssh-ed25519 and your email)"
echo "2. Go to GitHub â†’ Settings â†’ SSH and GPG keys â†’ New SSH key"
echo "3. Paste the key and give it a meaningful title"
echo
log "To test your SSH connection, run: ssh -T git@github.com"

# Copy to clipboard if possible
if [ "$OS" = "macos" ] && command -v pbcopy > /dev/null; then
    cat "$HOME/.ssh/id_ed25519.pub" | pbcopy
    log "Public key has been copied to your clipboard!"
elif [ "$OS" = "linux" ] && command -v xclip > /dev/null; then
    cat "$HOME/.ssh/id_ed25519.pub" | xclip -selection clipboard
    log "Public key has been copied to your clipboard!"
fi
